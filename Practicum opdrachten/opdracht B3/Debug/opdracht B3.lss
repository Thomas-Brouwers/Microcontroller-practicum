
opdracht B3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000232  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000002a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000923  00000000  00000000  0000034c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000084e  00000000  00000000  00000c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a8  00000000  00000000  000014bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  00001868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047a  00000000  00000000  000018e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000fc  00000000  00000000  00001d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001e5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	56 c0       	rjmp	.+172    	; 0xae <__ctors_end>
   2:	00 00       	nop
   4:	76 c0       	rjmp	.+236    	; 0xf2 <__vector_1>
   6:	00 00       	nop
   8:	8b c0       	rjmp	.+278    	; 0x120 <__vector_2>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	e9 00       	.word	0x00e9	; ????
  8e:	ec 00       	.word	0x00ec	; ????
  90:	ef 00       	.word	0x00ef	; ????
  92:	f2 00       	.word	0x00f2	; ????
  94:	f4 00       	.word	0x00f4	; ????
  96:	f6 00       	.word	0x00f6	; ????
  98:	f8 00       	.word	0x00f8	; ????
  9a:	fa 00       	.word	0x00fa	; ????
  9c:	fc 00       	.word	0x00fc	; ????
  9e:	fe 00       	.word	0x00fe	; ????
  a0:	00 01       	movw	r0, r0
  a2:	02 01       	movw	r0, r4
  a4:	04 01       	movw	r0, r8
  a6:	06 01       	movw	r0, r12
  a8:	08 01       	movw	r0, r16
  aa:	0a 01       	movw	r0, r20
  ac:	0c 01       	movw	r0, r24

000000ae <__ctors_end>:
  ae:	11 24       	eor	r1, r1
  b0:	1f be       	out	0x3f, r1	; 63
  b2:	cf ef       	ldi	r28, 0xFF	; 255
  b4:	d0 e1       	ldi	r29, 0x10	; 16
  b6:	de bf       	out	0x3e, r29	; 62
  b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e0       	ldi	r26, 0x00	; 0
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a2 30       	cpi	r26, 0x02	; 2
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	41 d0       	rcall	.+130    	; 0x14e <main>
  cc:	b0 c0       	rjmp	.+352    	; 0x22e <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <wait>:
				clock value is set. This is used by _delay_ms inside
				util/delay.h
Version :    	DMK, Initial code
*******************************************************************/
{
	for (int i=0; i<ms; i++)
  d0:	18 16       	cp	r1, r24
  d2:	19 06       	cpc	r1, r25
  d4:	6c f4       	brge	.+26     	; 0xf0 <wait+0x20>
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  da:	ef ec       	ldi	r30, 0xCF	; 207
  dc:	f7 e0       	ldi	r31, 0x07	; 7
  de:	31 97       	sbiw	r30, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <wait+0xe>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <wait+0x14>
  e4:	00 00       	nop
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	82 17       	cp	r24, r18
  ec:	93 07       	cpc	r25, r19
  ee:	a9 f7       	brne	.-22     	; 0xda <wait+0xa>
  f0:	08 95       	ret

000000f2 <__vector_1>:
inputs:
outputs:
notes:			Set PORTD.5
Version :    	DMK, Initial code
*******************************************************************/
{
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	8f 93       	push	r24
  fe:	9f 93       	push	r25
	idx++;
 100:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 104:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 108:	01 96       	adiw	r24, 0x01	; 1
 10a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 10e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	
}
 112:	9f 91       	pop	r25
 114:	8f 91       	pop	r24
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <__vector_2>:
inputs:
outputs:
notes:			Set PORTD.5
Version :    	DMK, Initial code
*******************************************************************/
{
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
	idx--;
 12e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 132:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 13c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	
}
 140:	9f 91       	pop	r25
 142:	8f 91       	pop	r24
 144:	0f 90       	pop	r0
 146:	0f be       	out	0x3f, r0	; 63
 148:	0f 90       	pop	r0
 14a:	1f 90       	pop	r1
 14c:	18 95       	reti

0000014e <main>:
outputs:	
notes:			
Version :    	DMK, Initial code
*******************************************************************/
{
	DDRD = 0xFC;
 14e:	8c ef       	ldi	r24, 0xFC	; 252
 150:	81 bb       	out	0x11, r24	; 17
	DDRC = 0XFF;
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	84 bb       	out	0x14, r24	; 20
	//PORTD = 0x01;
	EICRA |= 0x0B;			// INT1 falling edge, INT0 rising edge
 156:	ea e6       	ldi	r30, 0x6A	; 106
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	8b 60       	ori	r24, 0x0B	; 11
 15e:	80 83       	st	Z, r24
	EIMSK |= 0x03;			// Enable INT1 & INT0			
 160:	89 b7       	in	r24, 0x39	; 57
 162:	83 60       	ori	r24, 0x03	; 3
 164:	89 bf       	out	0x39, r24	; 57
	
	sei();
 166:	78 94       	sei
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
			case 14: PORTC = 0b1111001; break;
			case 15: PORTC = 0b1110001; break;
			case 16: PORTC = 0b1111001; break;
 168:	c9 e7       	ldi	r28, 0x79	; 121
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
			case 14: PORTC = 0b1111001; break;
			case 15: PORTC = 0b1110001; break;
 16a:	0f 2e       	mov	r0, r31
 16c:	f1 e7       	ldi	r31, 0x71	; 113
 16e:	7f 2e       	mov	r7, r31
 170:	f0 2d       	mov	r31, r0
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
 172:	0f 2e       	mov	r0, r31
 174:	fe e5       	ldi	r31, 0x5E	; 94
 176:	8f 2e       	mov	r8, r31
 178:	f0 2d       	mov	r31, r0
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
 17a:	0f 2e       	mov	r0, r31
 17c:	f9 e3       	ldi	r31, 0x39	; 57
 17e:	9f 2e       	mov	r9, r31
 180:	f0 2d       	mov	r31, r0
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
 182:	0f 2e       	mov	r0, r31
 184:	fc e7       	ldi	r31, 0x7C	; 124
 186:	af 2e       	mov	r10, r31
 188:	f0 2d       	mov	r31, r0
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
 18a:	0f 2e       	mov	r0, r31
 18c:	f7 e7       	ldi	r31, 0x77	; 119
 18e:	bf 2e       	mov	r11, r31
 190:	f0 2d       	mov	r31, r0
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
 192:	0f 2e       	mov	r0, r31
 194:	ff e6       	ldi	r31, 0x6F	; 111
 196:	cf 2e       	mov	r12, r31
 198:	f0 2d       	mov	r31, r0
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
 19a:	0f 2e       	mov	r0, r31
 19c:	ff e7       	ldi	r31, 0x7F	; 127
 19e:	df 2e       	mov	r13, r31
 1a0:	f0 2d       	mov	r31, r0
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
 1a2:	0f 2e       	mov	r0, r31
 1a4:	f7 e0       	ldi	r31, 0x07	; 7
 1a6:	ef 2e       	mov	r14, r31
 1a8:	f0 2d       	mov	r31, r0
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
 1aa:	0f 2e       	mov	r0, r31
 1ac:	fd e7       	ldi	r31, 0x7D	; 125
 1ae:	ff 2e       	mov	r15, r31
 1b0:	f0 2d       	mov	r31, r0
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
 1b2:	0d e6       	ldi	r16, 0x6D	; 109
		switch(idx){
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
 1b4:	16 e6       	ldi	r17, 0x66	; 102
		wait(100);
		switch(idx){
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
 1b6:	df e4       	ldi	r29, 0x4F	; 79
	EIMSK |= 0x03;			// Enable INT1 & INT0			
	
	sei();
	while (1==1)
	{
		wait(100);
 1b8:	84 e6       	ldi	r24, 0x64	; 100
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	89 df       	rcall	.-238    	; 0xd0 <wait>
		switch(idx){
 1be:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <_edata>
 1c2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <_edata+0x1>
 1c6:	e1 31       	cpi	r30, 0x11	; 17
 1c8:	f1 05       	cpc	r31, r1
 1ca:	b0 f7       	brcc	.-20     	; 0x1b8 <main+0x6a>
 1cc:	ea 5b       	subi	r30, 0xBA	; 186
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	25 c0       	rjmp	.+74     	; 0x21c <__tablejump2__>
			case 0: PORTC = 0b0111111; break;
 1d2:	8f e3       	ldi	r24, 0x3F	; 63
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	f0 cf       	rjmp	.-32     	; 0x1b8 <main+0x6a>
			case 1: PORTC = 0b0000110; break;
 1d8:	86 e0       	ldi	r24, 0x06	; 6
 1da:	85 bb       	out	0x15, r24	; 21
 1dc:	ed cf       	rjmp	.-38     	; 0x1b8 <main+0x6a>
			case 2: PORTC = 0b1011011; break;
 1de:	8b e5       	ldi	r24, 0x5B	; 91
 1e0:	85 bb       	out	0x15, r24	; 21
 1e2:	ea cf       	rjmp	.-44     	; 0x1b8 <main+0x6a>
			case 3: PORTC = 0b1001111; break;
 1e4:	d5 bb       	out	0x15, r29	; 21
 1e6:	e8 cf       	rjmp	.-48     	; 0x1b8 <main+0x6a>
			case 4: PORTC = 0b1100110; break;
 1e8:	15 bb       	out	0x15, r17	; 21
 1ea:	e6 cf       	rjmp	.-52     	; 0x1b8 <main+0x6a>
			case 5: PORTC = 0b1101101; break;
 1ec:	05 bb       	out	0x15, r16	; 21
 1ee:	e4 cf       	rjmp	.-56     	; 0x1b8 <main+0x6a>
			case 6: PORTC = 0b1111101; break;
 1f0:	f5 ba       	out	0x15, r15	; 21
 1f2:	e2 cf       	rjmp	.-60     	; 0x1b8 <main+0x6a>
			case 7: PORTC = 0b0000111; break;
 1f4:	e5 ba       	out	0x15, r14	; 21
 1f6:	e0 cf       	rjmp	.-64     	; 0x1b8 <main+0x6a>
			case 8: PORTC = 0b1111111; break;
 1f8:	d5 ba       	out	0x15, r13	; 21
 1fa:	de cf       	rjmp	.-68     	; 0x1b8 <main+0x6a>
			case 9: PORTC = 0b1101111; break;
 1fc:	c5 ba       	out	0x15, r12	; 21
 1fe:	dc cf       	rjmp	.-72     	; 0x1b8 <main+0x6a>
			case 10: PORTC = 0b1110111; break;
 200:	b5 ba       	out	0x15, r11	; 21
 202:	da cf       	rjmp	.-76     	; 0x1b8 <main+0x6a>
			case 11: PORTC = 0b1111100; break;
 204:	a5 ba       	out	0x15, r10	; 21
 206:	d8 cf       	rjmp	.-80     	; 0x1b8 <main+0x6a>
			case 12: PORTC = 0b0111001; break;
 208:	95 ba       	out	0x15, r9	; 21
 20a:	d6 cf       	rjmp	.-84     	; 0x1b8 <main+0x6a>
			case 13: PORTC = 0b1011110; break;
 20c:	85 ba       	out	0x15, r8	; 21
 20e:	d4 cf       	rjmp	.-88     	; 0x1b8 <main+0x6a>
			case 14: PORTC = 0b1111001; break;
 210:	c5 bb       	out	0x15, r28	; 21
 212:	d2 cf       	rjmp	.-92     	; 0x1b8 <main+0x6a>
			case 15: PORTC = 0b1110001; break;
 214:	75 ba       	out	0x15, r7	; 21
 216:	d0 cf       	rjmp	.-96     	; 0x1b8 <main+0x6a>
			case 16: PORTC = 0b1111001; break;
 218:	c5 bb       	out	0x15, r28	; 21
 21a:	ce cf       	rjmp	.-100    	; 0x1b8 <main+0x6a>

0000021c <__tablejump2__>:
 21c:	ee 0f       	add	r30, r30
 21e:	ff 1f       	adc	r31, r31
 220:	00 24       	eor	r0, r0
 222:	00 1c       	adc	r0, r0
 224:	0b be       	out	0x3b, r0	; 59
 226:	07 90       	elpm	r0, Z+
 228:	f6 91       	elpm	r31, Z
 22a:	e0 2d       	mov	r30, r0
 22c:	09 94       	ijmp

0000022e <_exit>:
 22e:	f8 94       	cli

00000230 <__stop_program>:
 230:	ff cf       	rjmp	.-2      	; 0x230 <__stop_program>
