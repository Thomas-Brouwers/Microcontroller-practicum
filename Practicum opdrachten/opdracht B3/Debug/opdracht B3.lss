
opdracht B3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000002c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000097c  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088d  00000000  00000000  00000ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ab  00000000  00000000  0000156d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  00001918  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a5  00000000  00000000  00001994  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000fc  00000000  00000000  00001e39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001f35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	56 c0       	rjmp	.+172    	; 0xae <__ctors_end>
   2:	00 00       	nop
   4:	83 c0       	rjmp	.+262    	; 0x10c <__vector_1>
   6:	00 00       	nop
   8:	98 c0       	rjmp	.+304    	; 0x13a <__vector_2>
   a:	00 00       	nop
   c:	6d c0       	rjmp	.+218    	; 0xe8 <__bad_interrupt>
   e:	00 00       	nop
  10:	6b c0       	rjmp	.+214    	; 0xe8 <__bad_interrupt>
  12:	00 00       	nop
  14:	69 c0       	rjmp	.+210    	; 0xe8 <__bad_interrupt>
  16:	00 00       	nop
  18:	67 c0       	rjmp	.+206    	; 0xe8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	65 c0       	rjmp	.+202    	; 0xe8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	63 c0       	rjmp	.+198    	; 0xe8 <__bad_interrupt>
  22:	00 00       	nop
  24:	61 c0       	rjmp	.+194    	; 0xe8 <__bad_interrupt>
  26:	00 00       	nop
  28:	5f c0       	rjmp	.+190    	; 0xe8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5d c0       	rjmp	.+186    	; 0xe8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	5b c0       	rjmp	.+182    	; 0xe8 <__bad_interrupt>
  32:	00 00       	nop
  34:	59 c0       	rjmp	.+178    	; 0xe8 <__bad_interrupt>
  36:	00 00       	nop
  38:	57 c0       	rjmp	.+174    	; 0xe8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	55 c0       	rjmp	.+170    	; 0xe8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	53 c0       	rjmp	.+166    	; 0xe8 <__bad_interrupt>
  42:	00 00       	nop
  44:	51 c0       	rjmp	.+162    	; 0xe8 <__bad_interrupt>
  46:	00 00       	nop
  48:	4f c0       	rjmp	.+158    	; 0xe8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4d c0       	rjmp	.+154    	; 0xe8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	4b c0       	rjmp	.+150    	; 0xe8 <__bad_interrupt>
  52:	00 00       	nop
  54:	49 c0       	rjmp	.+146    	; 0xe8 <__bad_interrupt>
  56:	00 00       	nop
  58:	47 c0       	rjmp	.+142    	; 0xe8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	45 c0       	rjmp	.+138    	; 0xe8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	43 c0       	rjmp	.+134    	; 0xe8 <__bad_interrupt>
  62:	00 00       	nop
  64:	41 c0       	rjmp	.+130    	; 0xe8 <__bad_interrupt>
  66:	00 00       	nop
  68:	3f c0       	rjmp	.+126    	; 0xe8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3d c0       	rjmp	.+122    	; 0xe8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	3b c0       	rjmp	.+118    	; 0xe8 <__bad_interrupt>
  72:	00 00       	nop
  74:	39 c0       	rjmp	.+114    	; 0xe8 <__bad_interrupt>
  76:	00 00       	nop
  78:	37 c0       	rjmp	.+110    	; 0xe8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	35 c0       	rjmp	.+106    	; 0xe8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	33 c0       	rjmp	.+102    	; 0xe8 <__bad_interrupt>
  82:	00 00       	nop
  84:	31 c0       	rjmp	.+98     	; 0xe8 <__bad_interrupt>
  86:	00 00       	nop
  88:	2f c0       	rjmp	.+94     	; 0xe8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	f6 00       	.word	0x00f6	; ????
  8e:	f9 00       	.word	0x00f9	; ????
  90:	fc 00       	.word	0x00fc	; ????
  92:	ff 00       	.word	0x00ff	; ????
  94:	01 01       	movw	r0, r2
  96:	03 01       	movw	r0, r6
  98:	05 01       	movw	r0, r10
  9a:	07 01       	movw	r0, r14
  9c:	09 01       	movw	r0, r18
  9e:	0b 01       	movw	r0, r22
  a0:	0d 01       	movw	r0, r26
  a2:	0f 01       	movw	r0, r30
  a4:	11 01       	movw	r2, r2
  a6:	13 01       	movw	r2, r6
  a8:	15 01       	movw	r2, r10
  aa:	17 01       	movw	r2, r14
  ac:	19 01       	movw	r2, r18

000000ae <__ctors_end>:
  ae:	11 24       	eor	r1, r1
  b0:	1f be       	out	0x3f, r1	; 63
  b2:	cf ef       	ldi	r28, 0xFF	; 255
  b4:	d0 e1       	ldi	r29, 0x10	; 16
  b6:	de bf       	out	0x3e, r29	; 62
  b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_copy_data>:
  ba:	11 e0       	ldi	r17, 0x01	; 1
  bc:	a0 e0       	ldi	r26, 0x00	; 0
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	ec e4       	ldi	r30, 0x4C	; 76
  c2:	f2 e0       	ldi	r31, 0x02	; 2
  c4:	00 e0       	ldi	r16, 0x00	; 0
  c6:	0b bf       	out	0x3b, r16	; 59
  c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x14>
  ca:	07 90       	elpm	r0, Z+
  cc:	0d 92       	st	X+, r0
  ce:	a0 30       	cpi	r26, 0x00	; 0
  d0:	b1 07       	cpc	r27, r17
  d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0x10>

000000d4 <__do_clear_bss>:
  d4:	21 e0       	ldi	r18, 0x01	; 1
  d6:	a0 e0       	ldi	r26, 0x00	; 0
  d8:	b1 e0       	ldi	r27, 0x01	; 1
  da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
  dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
  de:	a2 30       	cpi	r26, 0x02	; 2
  e0:	b2 07       	cpc	r27, r18
  e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
  e4:	41 d0       	rcall	.+130    	; 0x168 <main>
  e6:	b0 c0       	rjmp	.+352    	; 0x248 <_exit>

000000e8 <__bad_interrupt>:
  e8:	8b cf       	rjmp	.-234    	; 0x0 <__vectors>

000000ea <wait>:
				clock value is set. This is used by _delay_ms inside
				util/delay.h
Version :    	DMK, Initial code
*******************************************************************/
{
	for (int i=0; i<ms; i++)
  ea:	18 16       	cp	r1, r24
  ec:	19 06       	cpc	r1, r25
  ee:	6c f4       	brge	.+26     	; 0x10a <wait+0x20>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	ef ec       	ldi	r30, 0xCF	; 207
  f6:	f7 e0       	ldi	r31, 0x07	; 7
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <wait+0xe>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <wait+0x14>
  fe:	00 00       	nop
 100:	2f 5f       	subi	r18, 0xFF	; 255
 102:	3f 4f       	sbci	r19, 0xFF	; 255
 104:	82 17       	cp	r24, r18
 106:	93 07       	cpc	r25, r19
 108:	a9 f7       	brne	.-22     	; 0xf4 <wait+0xa>
 10a:	08 95       	ret

0000010c <__vector_1>:
inputs:
outputs:
notes:			Set PORTD.5
Version :    	DMK, Initial code
*******************************************************************/
{
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
	idx++;
 11a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 11e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 128:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	
}
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <__vector_2>:
inputs:
outputs:
notes:			Set PORTD.5
Version :    	DMK, Initial code
*******************************************************************/
{
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
	idx--;
 148:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 14c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 156:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	
}
 15a:	9f 91       	pop	r25
 15c:	8f 91       	pop	r24
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <main>:
outputs:	
notes:			
Version :    	DMK, Initial code
*******************************************************************/
{
	DDRD = 0xFC;
 168:	8c ef       	ldi	r24, 0xFC	; 252
 16a:	81 bb       	out	0x11, r24	; 17
	DDRC = 0XFF;
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	84 bb       	out	0x14, r24	; 20
	//PORTD = 0x01;
	EICRA |= 0x0B;			// INT1 falling edge, INT0 rising edge
 170:	ea e6       	ldi	r30, 0x6A	; 106
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	8b 60       	ori	r24, 0x0B	; 11
 178:	80 83       	st	Z, r24
	EIMSK |= 0x03;			// Enable INT1 & INT0			
 17a:	89 b7       	in	r24, 0x39	; 57
 17c:	83 60       	ori	r24, 0x03	; 3
 17e:	89 bf       	out	0x39, r24	; 57
	
	sei();
 180:	78 94       	sei
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
			case 14: PORTC = 0b1111001; break;
			case 15: PORTC = 0b1110001; break;
			case 16: PORTC = 0b1111001; break;
 182:	c9 e7       	ldi	r28, 0x79	; 121
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
			case 14: PORTC = 0b1111001; break;
			case 15: PORTC = 0b1110001; break;
 184:	0f 2e       	mov	r0, r31
 186:	f1 e7       	ldi	r31, 0x71	; 113
 188:	7f 2e       	mov	r7, r31
 18a:	f0 2d       	mov	r31, r0
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
			case 13: PORTC = 0b1011110; break;
 18c:	0f 2e       	mov	r0, r31
 18e:	fe e5       	ldi	r31, 0x5E	; 94
 190:	8f 2e       	mov	r8, r31
 192:	f0 2d       	mov	r31, r0
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
			case 12: PORTC = 0b0111001; break;
 194:	0f 2e       	mov	r0, r31
 196:	f9 e3       	ldi	r31, 0x39	; 57
 198:	9f 2e       	mov	r9, r31
 19a:	f0 2d       	mov	r31, r0
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
			case 11: PORTC = 0b1111100; break;
 19c:	0f 2e       	mov	r0, r31
 19e:	fc e7       	ldi	r31, 0x7C	; 124
 1a0:	af 2e       	mov	r10, r31
 1a2:	f0 2d       	mov	r31, r0
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
			case 10: PORTC = 0b1110111; break;
 1a4:	0f 2e       	mov	r0, r31
 1a6:	f7 e7       	ldi	r31, 0x77	; 119
 1a8:	bf 2e       	mov	r11, r31
 1aa:	f0 2d       	mov	r31, r0
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
			case 9: PORTC = 0b1101111; break;
 1ac:	0f 2e       	mov	r0, r31
 1ae:	ff e6       	ldi	r31, 0x6F	; 111
 1b0:	cf 2e       	mov	r12, r31
 1b2:	f0 2d       	mov	r31, r0
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
			case 8: PORTC = 0b1111111; break;
 1b4:	0f 2e       	mov	r0, r31
 1b6:	ff e7       	ldi	r31, 0x7F	; 127
 1b8:	df 2e       	mov	r13, r31
 1ba:	f0 2d       	mov	r31, r0
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
			case 7: PORTC = 0b0000111; break;
 1bc:	0f 2e       	mov	r0, r31
 1be:	f7 e0       	ldi	r31, 0x07	; 7
 1c0:	ef 2e       	mov	r14, r31
 1c2:	f0 2d       	mov	r31, r0
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
			case 6: PORTC = 0b1111101; break;
 1c4:	0f 2e       	mov	r0, r31
 1c6:	fd e7       	ldi	r31, 0x7D	; 125
 1c8:	ff 2e       	mov	r15, r31
 1ca:	f0 2d       	mov	r31, r0
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
			case 5: PORTC = 0b1101101; break;
 1cc:	0d e6       	ldi	r16, 0x6D	; 109
		switch(idx){
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
			case 4: PORTC = 0b1100110; break;
 1ce:	16 e6       	ldi	r17, 0x66	; 102
		wait(100);
		switch(idx){
			case 0: PORTC = 0b0111111; break;
			case 1: PORTC = 0b0000110; break;
			case 2: PORTC = 0b1011011; break;
			case 3: PORTC = 0b1001111; break;
 1d0:	df e4       	ldi	r29, 0x4F	; 79
	EIMSK |= 0x03;			// Enable INT1 & INT0			
	
	sei();
	while (1==1)
	{
		wait(100);
 1d2:	84 e6       	ldi	r24, 0x64	; 100
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	89 df       	rcall	.-238    	; 0xea <wait>
		switch(idx){
 1d8:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_end>
 1dc:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_end+0x1>
 1e0:	e1 31       	cpi	r30, 0x11	; 17
 1e2:	f1 05       	cpc	r31, r1
 1e4:	b0 f7       	brcc	.-20     	; 0x1d2 <main+0x6a>
 1e6:	ea 5b       	subi	r30, 0xBA	; 186
 1e8:	ff 4f       	sbci	r31, 0xFF	; 255
 1ea:	25 c0       	rjmp	.+74     	; 0x236 <__tablejump2__>
			case 0: PORTC = 0b0111111; break;
 1ec:	8f e3       	ldi	r24, 0x3F	; 63
 1ee:	85 bb       	out	0x15, r24	; 21
 1f0:	f0 cf       	rjmp	.-32     	; 0x1d2 <main+0x6a>
			case 1: PORTC = 0b0000110; break;
 1f2:	86 e0       	ldi	r24, 0x06	; 6
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	ed cf       	rjmp	.-38     	; 0x1d2 <main+0x6a>
			case 2: PORTC = 0b1011011; break;
 1f8:	8b e5       	ldi	r24, 0x5B	; 91
 1fa:	85 bb       	out	0x15, r24	; 21
 1fc:	ea cf       	rjmp	.-44     	; 0x1d2 <main+0x6a>
			case 3: PORTC = 0b1001111; break;
 1fe:	d5 bb       	out	0x15, r29	; 21
 200:	e8 cf       	rjmp	.-48     	; 0x1d2 <main+0x6a>
			case 4: PORTC = 0b1100110; break;
 202:	15 bb       	out	0x15, r17	; 21
 204:	e6 cf       	rjmp	.-52     	; 0x1d2 <main+0x6a>
			case 5: PORTC = 0b1101101; break;
 206:	05 bb       	out	0x15, r16	; 21
 208:	e4 cf       	rjmp	.-56     	; 0x1d2 <main+0x6a>
			case 6: PORTC = 0b1111101; break;
 20a:	f5 ba       	out	0x15, r15	; 21
 20c:	e2 cf       	rjmp	.-60     	; 0x1d2 <main+0x6a>
			case 7: PORTC = 0b0000111; break;
 20e:	e5 ba       	out	0x15, r14	; 21
 210:	e0 cf       	rjmp	.-64     	; 0x1d2 <main+0x6a>
			case 8: PORTC = 0b1111111; break;
 212:	d5 ba       	out	0x15, r13	; 21
 214:	de cf       	rjmp	.-68     	; 0x1d2 <main+0x6a>
			case 9: PORTC = 0b1101111; break;
 216:	c5 ba       	out	0x15, r12	; 21
 218:	dc cf       	rjmp	.-72     	; 0x1d2 <main+0x6a>
			case 10: PORTC = 0b1110111; break;
 21a:	b5 ba       	out	0x15, r11	; 21
 21c:	da cf       	rjmp	.-76     	; 0x1d2 <main+0x6a>
			case 11: PORTC = 0b1111100; break;
 21e:	a5 ba       	out	0x15, r10	; 21
 220:	d8 cf       	rjmp	.-80     	; 0x1d2 <main+0x6a>
			case 12: PORTC = 0b0111001; break;
 222:	95 ba       	out	0x15, r9	; 21
 224:	d6 cf       	rjmp	.-84     	; 0x1d2 <main+0x6a>
			case 13: PORTC = 0b1011110; break;
 226:	85 ba       	out	0x15, r8	; 21
 228:	d4 cf       	rjmp	.-88     	; 0x1d2 <main+0x6a>
			case 14: PORTC = 0b1111001; break;
 22a:	c5 bb       	out	0x15, r28	; 21
 22c:	d2 cf       	rjmp	.-92     	; 0x1d2 <main+0x6a>
			case 15: PORTC = 0b1110001; break;
 22e:	75 ba       	out	0x15, r7	; 21
 230:	d0 cf       	rjmp	.-96     	; 0x1d2 <main+0x6a>
			case 16: PORTC = 0b1111001; break;
 232:	c5 bb       	out	0x15, r28	; 21
 234:	ce cf       	rjmp	.-100    	; 0x1d2 <main+0x6a>

00000236 <__tablejump2__>:
 236:	ee 0f       	add	r30, r30
 238:	ff 1f       	adc	r31, r31
 23a:	00 24       	eor	r0, r0
 23c:	00 1c       	adc	r0, r0
 23e:	0b be       	out	0x3b, r0	; 59
 240:	07 90       	elpm	r0, Z+
 242:	f6 91       	elpm	r31, Z
 244:	e0 2d       	mov	r30, r0
 246:	09 94       	ijmp

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
